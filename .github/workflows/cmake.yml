name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: MinSizeRel
  TURBO_COMMIT_SHA: ${{ github.sha }}

jobs:
  build-linux-gcc:
    name: Linux (GCC 7)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Dependencies
      run: |
        # Add legacy repositories required by g++-7
        sudo tee --append /etc/apt/sources.list << EOF
          deb http://us.archive.ubuntu.com/ubuntu/ bionic universe
          deb http://us.archive.ubuntu.com/ubuntu/ bionic main
        EOF
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
        sudo apt-get -y update
        sudo apt-get -y install g++-7 libgtest-dev

    - name: Configure CMake
      shell: bash
      env:
        CC: gcc-7
        CXX: g++-7
      run: cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTURBO_OPTIMIZE_BUILD=OFF -DTURBO_BUILD_EXAMPLES=ON -DTURBO_BUILD_TESTS=ON

    - name: Build
      shell: bash
      run: cmake --build . -j$(nproc)

  build-windows-msvc32:
    name: Windows (MSVC) (Win32)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Configure CMake
      shell: bash
      run: cmake . -A Win32 -DTURBO_USE_STATIC_RTL=ON

    - name: Build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE -- -p:UseMultiToolTask=true -p:CL_MPcount=$(nproc)

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: turbo-x86
        path: |
          ${{env.BUILD_TYPE}}/turbo.exe

  build-windows-msvc64:
    name: Windows (MSVC) (x64)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Configure CMake
      shell: bash
      run: cmake . -A x64 -DTURBO_USE_STATIC_RTL=ON

    - name: Build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE -- -p:UseMultiToolTask=true -p:CL_MPcount=$(nproc)

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: turbo-x64
        path: |
          ${{env.BUILD_TYPE}}/turbo.exe

  build-windows-mingw:
    name: Windows (MinGW)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Configure CMake
      shell: bash
      run: cmake . -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="-static" -DTURBO_OPTIMIZE_BUILD=OFF

    - name: Build
      shell: bash
      run: cmake --build . -j$(nproc)

  build-macos-clang:
    name: MacOS (Clang)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Configure CMake
      shell: bash
      run: cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      run: cmake --build . -j$(sysctl -n hw.logicalcpu)

